##method practice

# text string + branching excercise
puts "Hello there, and what\'s your first name?"
name = gets
puts "lovely your name is " + name + "? what is your middle name?"
mname = gets
puts "your name is " + name + mname + "?"
puts "what is your last name?"
lname = gets
puts " so your name is " + name +   mname  + lname 

##super simple 99 bottles, while--end


puts "how many bottles?"
bottles = gets.chomp.to_i
while bottles > 0
 puts " #{bottles}     bottles of beer on the wall"
# bottles = bottles.to_i - 1
  bottles -= 1
 
end
puts "that's all folks"


###nonworking fizzbuzz
def fizzbuzz
    i = 1
    while i <= 20
    
        if ( i % 3 == 0)
            a =  "fizz"
        
         if ( i % 5 == 0)
            a = "buzz"
            
        if ( i % 15 == 0)
              a = "fizzbuzz"
     end   
end
    else a = i
    end 
    puts a
    i += 1
    end
end

##another bad fizzbuzz
def fizzbuzz
    i = 1
    while i <= 20
        a = ""
        if ( i % 3 == 0)
            a +=  "fizz"
        
         if ( i % 5 == 0)
            a += "buzz"       
end
    
    end 
    puts (a.empty? ? i : a)
    i += 1
    end
end

##WORKING fizzbuzz
def fizzbuzz
    i = 1
while i <= 20   
    x = ''
    x += "Fizz" if (i % 3 == 0) 
    x += "Buzz" if (i % 5 == 0)
    puts(x.empty? ? i : x)
    i += 1
end
end

##working exponenter!

def pow(base, exponent)
    answer = 1
    i = 1
    while i <= exponent
    answer = base * answer
    i += 1
end
puts answer
end

##working array adder
def add
array = [1,2,3,4]
add = 0
array.each {|i| add += i}
 add
end

##working priminator!!
def is_prime?(num)
    for x in 2..(num - 1)
    if num % x == 0
    return false
 end
end
true
end

## primes

def primes(max)
    max = 11
    i = 2
    while i < max
    if is_prime?(i) 
        
    end
    puts i
i += 1
end

## primes the whole damned thing

def primes(max)
    array = []

    i = 1
    while i < max
        if is_prime?(i)
            array << i
        end
        i += 1
    end
array
end

def is_prime?(num)
    for x in 2..(num)
    if num % x == 0
    return false
 end
end
true
end

